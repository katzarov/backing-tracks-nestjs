// types are copied from here, https://github.com/microlinkhq/youtube-dl-exec/blob/master/src/index.d.ts
// seem correct but some are missing

export type OptionFormatSort =
  | 'hasvid'
  | 'hasaud'
  | 'ie_pref'
  | 'lang'
  | 'quality'
  | 'source'
  | 'proto'
  | 'vcodec'
  | 'acodec'
  | 'codec'
  | 'vext'
  | 'aext'
  | 'ext'
  | 'filesize'
  | 'fs_approx'
  | 'size'
  | 'height'
  | 'width'
  | 'res'
  | 'fps'
  | 'hdr'
  | 'channels'
  | 'tbr'
  | 'vbr'
  | 'abr'
  | 'br'
  | 'asr';
export type OptionFormatSortPlus = OptionFormatSort | `+${OptionFormatSort}`;
export type IArgs = {
  abortOnError?: boolean;
  abortOnUnavailableFragment?: boolean;
  addHeader?: string[];
  addMetadata?: boolean;
  ageLimit?: number;
  allFormats?: boolean;
  allSubs?: boolean;
  apListMso?: boolean;
  apMso?: string;
  apPassword?: string;
  apUsername?: string;
  audioFormat?: string;
  audioQuality?: number;
  autonumberStart?: number;
  batchFile?: string;
  bidiWorkaround?: boolean;
  bufferSize?: string;
  cacheDir?: string;
  callHome?: boolean;
  configLocation?: string;
  consoleTitle?: boolean;
  continue?: boolean;
  convertSubs?: string;
  cookies?: string;
  date?: string;
  dateafter?: string;
  datebefore?: string;
  defaultSearch?: string;
  downloadArchive?: string;
  downloadSections?: string;
  dumpJson?: boolean;
  dumpPages?: boolean;
  dumpSingleJson?: boolean;
  dumpUserAgent?: boolean;
  embedSubs?: boolean;
  embedThumbnail?: boolean;
  encoding?: string;
  exec?: string;
  externalDownloader?: string;
  externalDownloaderArgs?: string;
  extractAudio?: boolean;
  extractorDescriptions?: boolean;
  ffmpegLocation?: string;
  fixup?: string;
  flatPlaylist?: boolean;
  forceGenericExtractor?: boolean;
  forceIpv4?: boolean;
  forceIpv6?: boolean;
  forceKeyframesAtCuts?: boolean;
  format?: string;
  formatSort?: OptionFormatSortPlus[];
  geoBypass?: boolean;
  geoBypassCountry?: string;
  geoBypassIpBlock?: string;
  geoVerificationProxy?: string;
  getDuration?: boolean;
  getFilename?: boolean;
  getFormat?: boolean;
  getId?: boolean;
  getThumbnail?: boolean;
  getTitle?: boolean;
  getUrl?: boolean;
  help?: boolean;
  hlsPreferFfmpeg?: boolean;
  hlsPreferNative?: boolean;
  hlsUseMpegts?: boolean;
  httpChunkSize?: string;
  id?: boolean;
  ignoreConfig?: boolean;
  ignoreErrors?: boolean;
  includeAds?: boolean;
  keepFragments?: boolean;
  keepVideo?: boolean;
  limitRate?: string;
  listExtractors?: boolean;
  listFormats?: boolean;
  listSubs?: boolean;
  listThumbnails?: boolean;
  loadInfoJson?: string;
  markWatched?: boolean;
  matchFilter?: string;
  matchTitle?: string;
  maxDownloads?: number;
  maxFilesize?: string;
  maxSleepInterval?: number;
  maxViews?: number;
  mergeOutputFormat?: string;
  metadataFromTitle?: string;
  minFilesize?: string;
  minViews?: number;
  netrc?: boolean;
  newline?: boolean;
  noCacheDir?: boolean;
  noCheckCertificates?: boolean;
  noColor?: boolean;
  noMtime?: boolean;
  noOverwrites?: boolean;
  noPart?: boolean;
  noPlaylist?: boolean;
  noPostOverwrites?: boolean;
  noProgress?: boolean;
  noResizeBuffer?: boolean;
  noWarnings?: boolean;
  output?: string;
  outputNaPlaceholder?: string;
  password?: string;
  playlistEnd?: number | 'last';
  playlistItems?: string;
  playlistRandom?: boolean;
  playlistReverse?: boolean;
  playlistStart?: number;
  postprocessorArgs?: string;
  preferAvconv?: boolean;
  preferFfmpeg?: boolean;
  preferFreeFormats?: boolean;
  preferInsecure?: boolean;
  printJson?: boolean;
  printTraffic?: boolean;
  proxy?: string;
  quiet?: boolean;
  recodeVideo?: string;
  referer?: string;
  rejectTitle?: string;
  remuxVideo?: string;
  restrictFilenames?: boolean;
  retries?: number | 'infinite';
  rmCacheDir?: boolean;
  simulate?: boolean;
  skipDownload?: boolean;
  skipUnavailableFragments?: boolean;
  sleepInterval?: number;
  socketTimeout?: number;
  sourceAddress?: string;
  subFormat?: string;
  subLang?: string;
  twofactor?: string;
  update?: boolean;
  userAgent?: string;
  username?: string;
  verbose?: boolean;
  version?: boolean;
  videoPassword?: string;
  writeAllThumbnails?: boolean;
  writeAnnotations?: boolean;
  writeAutoSub?: boolean;
  writeDescription?: boolean;
  writeInfoJson?: boolean;
  writePages?: boolean;
  writeSub?: boolean;
  writeThumbnail?: boolean;
  xattrs?: boolean;
  xattrSetFilesize?: boolean;
  yesPlaylist?: boolean;
  youtubeSkipDashManifest?: boolean;
  // added by me
  sleepRequests?: Second;
  paths: string[];
  progressTemplate: string;
};

type Second = number;
